{"timestamp": "2025-05-05T06:23:12.929694", "method": "GET", "url": "http://localhost:8080/profile", "status_code": 200, "processing_time": 0.0019974708557128906, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:23:12.932064", "processing_time": 0.00436711311340332, "response_body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Choose Your Skin</title>\n    <style>\n        body {\n            margin: 0;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            background: url('pictures/Home_Background.jpg') no-repeat center center fixed;\n            font-family: Arial, sans-serif;\n            color: white;\n        }\n\n        .menu-container {\n            background: linear-gradient(to bottom, rgba(80, 40, 110, 0.8), rgba(120, 60, 150, 0.7));\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n            text-align: center;\n            width: 300px;\n        }\n\n        .menu-title {\n            font-size: 28px;\n            font-weight: bold;\n            margin-bottom: 20px;\n            color: black;\n            text-shadow:\n                0px 0px 1px white,\n                -1px 0 1px white,\n                1px 0 1px white,\n                0 -1px 1px white,\n                0 1px 1px white;\n        }\n\n        .button-container {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n        }\n\n        .skin-button {\n            width: 90px;\n            height: 90px;\n            border: 2px solid #ccc;\n            border-radius: 5px;\n            cursor: pointer;\n            background-size: cover;\n            background-position: center;\n        }\n\n        .skin-button.selected {\n            border: 4px solid #007bff;\n        }\n\n        .btn-border-reveal {\n            background-color: #9b59b6;\n            color: white;\n            border: 2px solid #9b59b6;\n            position: relative;\n            overflow: hidden;\n            font-size: 20px;\n            padding: 12px 24px;\n            border-radius: 10px;\n            cursor: pointer;\n            z-index: 0;\n            margin: 10px 0;\n            display: inline-block;\n            text-align: center;\n        }\n\n        .btn-border-reveal::after {\n            content: \"\";\n            position: absolute;\n            width: 0;\n            height: 100%;\n            top: 0;\n            left: 0;\n            background-color: #6d3996;\n            transition: width 0.3s ease;\n            z-index: -1;\n        }\n\n        .btn-border-reveal:hover::after {\n            width: 100%;\n        }\n\n        .btn-border-reveal:hover {\n            color: white;\n            z-index: 1;\n        }\n\n        #file-upload {\n            display: none;\n        }\n\n        .player-preview {\n            position: absolute;\n            right: 20px;\n            top: 50%;\n            transform: translateY(-50%);\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n\n        .player-preview img {\n            width: 160px;\n            height: 160px;\n            border-radius: 50%;\n            border: none;\n            background-color: transparent;\n        }\n\n        .player-preview-title {\n            margin-top: 10px;\n            font-size: 20px;\n            color: white;\n            text-shadow: 1px 1px 2px black;\n        }\n\n        .player-stats {\n            position: absolute;\n            left: 20px;\n            top: 20%;\n            transform: translateY(-20%);\n            background: rgba(0, 0, 0, 0.6);\n            border: 2px solid #9b59b6;\n            border-radius: 10px;\n            padding: 20px;\n            width: 220px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n        }\n\n        .player-stats h2 {\n            margin-top: 0;\n            font-size: 24px;\n            text-align: center;\n            color: #fff;\n            text-shadow: 1px 1px 2px black;\n        }\n\n        .stat-item {\n            margin: 12px 0;\n            font-size: 18px;\n            color: #ccc;\n        }\n\n        .error-message {\n            color: #ff5555;\n            background-color: rgba(0, 0, 0, 0.7);\n            padding: 8px;\n            border-radius: 5px;\n            margin-top: 10px;\n            display: none;\n        }\n    </style>\n</head>\n<body>\n    <!-- Player Stats Section -->\n    <div class=\"player-stats\">\n        <h2>Player Stats</h2>\n        <div class=\"stat-item\">Games Won: <span id=\"games-won\">0</span></div>\n        <div class=\"stat-item\">Deaths: <span id=\"deaths\">0</span></div>\n        <div class=\"stat-item\">Player kills: <span id=\"kills\">0</span></div>\n        <div class=\"stat-item\">Pellets eaten: <span id=\"pellets-eaten\">0</span></div>\n    </div>\n\n    <!-- Skin Selection Menu -->\n    <div class=\"menu-container\">\n        <div class=\"menu-title\">Choose Your Skin</div>\n        <div class=\"button-container\" id=\"skins-container\">\n            <div class=\"skin-button\" id=\"skin1\" style=\"background-image: url('pictures/PurplePlanet.png');\"></div>\n            <div class=\"skin-button\" id=\"skin2\" style=\"background-image: url('pictures/RedPlanet.png');\"></div>\n            <div class=\"skin-button\" id=\"skin3\" style=\"background-image: url('pictures/BluePlanet.png');\"></div>\n            <div class=\"skin-button\" id=\"custom\" style=\"display: none;\"></div>\n        </div>\n        <button class=\"btn-border-reveal\" id=\"back\">Back</button>\n        <button class=\"btn-border-reveal\" id=\"upload-button\">Upload Skin</button>\n        <input type=\"file\" id=\"file-upload\" accept=\".jpg,.jpeg,.png\">\n        <div class=\"error-message\" id=\"upload-error\">Only JPEG and PNG files are allowed</div>\n    </div>\n\n    <!-- Player Preview -->\n    <div class=\"player-preview\">\n        <img id=\"player-preview-image\" src=\"pictures/PurplePlanet.png\" alt=\"Player Preview\">\n        <div class=\"player-preview-title\">Your Player</div>\n    </div>\n\n    <script>\n        let selectedSkin = \"skin1\"; // Default selected skin\n        const customSkinButton = document.getElementById('custom');\n        const previewImage = document.getElementById('player-preview-image');\n\n        // Fetch player stats on page load\n        window.onload = () => {\n            fetch('/api/playerStats')\n                .then(response => response.json())\n                .then(data => {\n                    // Update the player stats in the UI\n                    document.getElementById('games-won').textContent = data.gamesWon || 0;\n                    document.getElementById('deaths').textContent = data.deaths || 0;\n                    document.getElementById('kills').textContent = data.kills || 0;\n                    document.getElementById('pellets-eaten').textContent = data.pellets || 0;\n                    \n                    // Update preview image with currently selected skin\n                    if (data.skinFileName) {\n                        previewImage.src = `pictures/${data.skinFileName}`;\n                    }\n                    \n                    // Need to make an additional request to check for custom skin existence\n                    fetch('/api/playerSprite')\n                        .then(response => response.json())\n                        .then(skinData => {\n                            // If the user has a custom skin file, make the custom button visible\n                            const fileName = skinData.fileName;\n                            if (fileName && \n                                fileName !== \"PurplePlanet.png\" && \n                                fileName !== \"RedPlanet.png\" && \n                                fileName !== \"BluePlanet.png\") {\n                                customSkinButton.style.backgroundImage = `url(pictures/${fileName})`;\n                                customSkinButton.style.display = 'block';\n                            }\n                            \n                            // Now select the currently active skin\n                            if (data.skinFileName === \"PurplePlanet.png\") {\n                                document.getElementById('skin1').click();\n                            } else if (data.skinFileName === \"RedPlanet.png\") {\n                                document.getElementById('skin2').click();\n                            } else if (data.skinFileName === \"BluePlanet.png\") {\n                                document.getElementById('skin3').click();\n                            } else {\n                                // This is a custom uploaded skin that's currently selected\n                                customSkinButton.click();\n                            }\n                        })\n                        .catch(error => console.error('Error fetching skin data:', error));\n                })\n                .catch(error => console.error('Error fetching player stats:', error));\n        };\n\n        document.getElementById('back').addEventListener('click', () => {\n            window.location.href = '/'; // Replace with the actual path to the index page\n        });\n\n        // Handle skin button clicks\n        document.querySelectorAll('.skin-button').forEach(button => {\n            button.addEventListener('click', () => {\n                document.querySelectorAll('.skin-button').forEach(btn => btn.classList.remove('selected'));\n                button.classList.add('selected');\n                previewImage.src = button.style.backgroundImage.slice(5, -2);\n                selectedSkin = button.id;\n\n                fetch('/api/profile', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ selectedSkin: selectedSkin }),\n                })\n                .then(response => response.json())\n                .then(data => console.log('Skin saved successfully:', data))\n                .catch(error => console.error('Error saving skin:', error));\n            });\n        });\n\n        document.getElementById('upload-button').addEventListener('click', () => {\n            document.getElementById('file-upload').click();\n        });\n\n        document.getElementById('file-upload').addEventListener('change', (event) => {\n            const file = event.target.files[0];\n            if (file) {\n                // Check if file is JPEG or PNG\n                const fileType = file.type;\n                const errorMessage = document.getElementById('upload-error');\n                \n                if (fileType !== 'image/jpeg' && fileType !== 'image/png') {\n                    // Show error message\n                    errorMessage.style.display = 'block';\n                    // Clear the file input\n                    event.target.value = '';\n                    return;\n                }\n                \n                // Hide error message if previously shown\n                errorMessage.style.display = 'none';\n                \n                const formData = new FormData();\n                formData.append('file', file);\n\n                fetch('/upload', { method: 'POST', body: formData })\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.file_path) {\n                            customSkinButton.style.backgroundImage = `url(${data.file_path})`;\n                            customSkinButton.style.display = 'block';\n                            customSkinButton.click();\n                        } else {\n                            throw new Error('No file path returned');\n                        }\n                    })\n                    .catch(error => console.error('Error uploading file:', error));\n            }\n        });\n    </script>\n</body>\n</html>\n"}

{"timestamp": "2025-05-05T06:23:12.991742", "method": "GET", "url": "http://localhost:8080/api/playerStats", "status_code": 401, "processing_time": 0.004790544509887695, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:23:12.993231", "processing_time": 0.006271839141845703, "response_body": {"detail": "Unauthorized: Username is required"}}

{"timestamp": "2025-05-05T06:23:13.007913", "method": "GET", "url": "http://localhost:8080/api/playerSprite", "status_code": 401, "processing_time": 0.002423524856567383, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:23:13.008954", "processing_time": 0.0034558773040771484, "response_body": {"detail": "Unauthorized: Username is required"}}

{"timestamp": "2025-05-05T06:23:13.030391", "method": "POST", "url": "http://localhost:8080/api/profile", "status_code": 401, "processing_time": 0.006498813629150391, "client_ip": "192.168.65.1", "request_body": {"selectedSkin": "custom"}, "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:23:13.032417", "processing_time": 0.008512735366821289, "response_body": {"detail": "User not authenticated"}}

{"timestamp": "2025-05-05T06:23:19.646720", "method": "GET", "url": "http://localhost:8080/auth/status", "status_code": 200, "processing_time": 0.004755735397338867, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:23:19.647886", "processing_time": 0.005952119827270508, "response_body": {"logged_in": false}}

{"timestamp": "2025-05-05T06:24:14.254527", "method": "POST", "url": "http://localhost:8080/api/register", "status_code": 201, "processing_time": 0.29378366470336914, "client_ip": "192.168.65.1", "request_body": {"username": "ryan_becker", "password": "P4ssw()rd"}, "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:24:14.255342", "processing_time": 0.2945897579193115, "response_body": {"message": "Registration successful"}}

{"timestamp": "2025-05-05T06:24:17.421968", "method": "POST", "url": "http://localhost:8080/api/login", "status_code": 200, "processing_time": 0.2706923484802246, "client_ip": "192.168.65.1", "request_body": {"username": "ryan_becker", "password": "P4ssw()rd"}, "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:24:17.422803", "processing_time": 0.2715184688568115, "response_body": {"message": "Login successful"}}

{"timestamp": "2025-05-05T06:24:17.464698", "method": "GET", "url": "http://localhost:8080/auth/status", "status_code": 200, "processing_time": 0.0037910938262939453, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:24:17.466289", "processing_time": 0.005342006683349609, "response_body": {"logged_in": true, "username": "ryan_becker"}}

{"timestamp": "2025-05-05T06:25:24.916955", "method": "GET", "url": "http://localhost:8080/api/game/status", "status_code": 200, "processing_time": 0.002456188201904297, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:25:24.918010", "processing_time": 0.0035071372985839844, "response_body": {"in_game": false}}

{"timestamp": "2025-05-05T06:25:24.939919", "method": "GET", "url": "http://localhost:8080/play", "status_code": 200, "processing_time": 0.006745100021362305, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:25:24.941325", "processing_time": 0.008152484893798828, "response_body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Phaser Game</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/phaser@3/dist/phaser.js\"></script>\n  <style>\n    /* Ensure the body and html fill the screen and do not have extra margins */\n    html, body {\n      height: 100%;\n      margin: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #f0f0f0;\n    }\n\n    /* Center the game container and set its dimensions */\n    .game-container {\n      width: 75vw;\n      height: 75vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    /* Make sure the canvas fills the container */\n    canvas {\n      width: 100% !important;\n      height: 100% !important;\n    }\n  </style>\n</head>\n<body>\n  <!-- Game Container -->\n  <div class=\"game-container\">\n    <!-- Phaser will automatically create a canvas inside this div -->\n  </div>\n\n  <script src=\"/game/static/game.js\"></script>\n</body>\n</html>"}

{"timestamp": "2025-05-05T06:25:25.003531", "method": "GET", "url": "http://localhost:8080/game/static/game.js", "status_code": 304, "processing_time": 0.02014636993408203, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:25:25.005434", "processing_time": 0.022044897079467773, "response_body": ""}

{"timestamp": "2025-05-05T06:25:25.717754", "method": "GET", "url": "http://localhost:8080/api/playerSprite", "status_code": 200, "processing_time": 0.01983332633972168, "client_ip": "192.168.65.1", "request_body": "", "response_body": "<streaming response>"}

{"timestamp": "2025-05-05T06:25:25.718851", "processing_time": 0.020924806594848633, "response_body": {"fileName": "PurplePlanet.png"}}

